
My First Sorting Problem //https://codeforces.com/problemset/problem/1971/A
import java.util.Scanner;
public class MyFirstSortingProblem {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
 
        int t=sc.nextInt();
 
        for(int i=0;i<t;i++){
            int x=sc.nextInt();
            int y=sc.nextInt();
 
            if(x > y){
               
                int temp=x;
                 x=y;
                 y=temp;
                 System.out.println(x+" "+y);
            }
            else{
                System.out.println(x+" "+y);
            }
        }
    }
}
B. Triple// https://codeforces.com/problemset/problem/1669/B
import java.util.Scanner;
import java.util.Map;
import java.util.HashMap;;

public class BTriple {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);

        int t=sc.nextInt();
        while (t-- >0) {
            int n=sc.nextInt();
            int arr[]=new int[n];
            Map<Integer, Integer> countMap = new HashMap<>();
             int result=-1;

             for(int i=0;i<n;i++){
                arr[i]=sc.nextInt();
                int currentCount = countMap.getOrDefault(arr[i], 0);
                countMap.put(arr[i],currentCount+1);

                if(countMap.get(arr[i])==3){
                    result=arr[i];
                }
             }
             System.out.println(result);
        }        
    }
}
A. Fafa and his Company// https://codeforces.com/problemset/problem/935/A
import java.util.Scanner;
 
public class FafandhisCompany {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
         
        int ways=0;
 
     for(int l=1;l<n;l++){
 
        if(n%l==0){
            ways++;
        }
    }
        System.out.println(ways);
    }
}
290. Word Pattern// https://leetcode.com/problems/word-pattern/description/?envType=study-plan-v2&envId=top-interview-150
class Solution {
    public boolean wordPattern(String pattern, String s) {
        Map<Character, String> map = new HashMap<>();
        String[] str = s.split(" ");

        if (pattern.length() != str.length) return false;

        for (int i = 0; i < str.length; i++) {
            char ch = pattern.charAt(i);

            if (map.containsKey(ch)) {
                if (!map.get(ch).equals(str[i])){
                 
                  return false;
                }
                
            } 
            else {
                if (map.containsValue(str[i])) {
                 return false;   
                }
                map.put(ch, str[i]);
            }
        }
        return true;
    }
}

