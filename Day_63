///////////////////////////B. Queue at the School///////////////    https://codeforces.com/problemset/problem/266/B

import java.util.Scanner;
public class QueueattheSchool {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
 
        int n=sc.nextInt();
        int t=sc.nextInt();
 
        String str=sc.next();
        char[] queue = str.toCharArray();
 
        for(int i=0;i<t;i++){
            for(int j=0;j<n-1;j++){
                if (queue[j] == 'B' && queue[j + 1] == 'G'){
 
                    queue[j]='G';
                    queue[j+1]='B';
                     
                    j++;
                }
            }
        }
        System.out.println(new String(queue));
    }
}

/////////A. In Search of an Easy Problem     /////// https://codeforces.com/problemset/problem/1030/A

import java.util.Scanner;
public class EasyProblem {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
 
        int n=sc.nextInt();
        int [] arr=new int[n];
        
 
        for(int i=0;i<n;i++){
           arr[i]=sc.nextInt();
        }
        for(int i=0;i<n;i++){
 
          if(arr[i]==1){
            System.out.println("HARD");  
            return; 
          }
 
        }
        System.out.println("EASY");
    }
}

 ////// A. George and Accommodation //////            //////  https://codeforces.com/problemset/problem/467/A

import java.util.Scanner;
public class GeorgeandAccommodation {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);

       int n=sc.nextInt();
       int count=0;


       for(int i=0;i<n;i++){
        int p=sc.nextInt();
        int q= sc.nextInt();

        if(q-p>=2){
            count++;
        } 
    }
      System.out.println(count);


////////////////55. Jump Game/////////////////    
https://leetcode.com/problems/jump-game/class Solution {
    public boolean canJump(int[] nums) {

      int max=nums[0];
      for(int i=1;i<nums.length;i++){
        if(i>max) return false;
        max=Math.max(max, i+nums[i]);
      }
      return true;
    }
}

    }
}

