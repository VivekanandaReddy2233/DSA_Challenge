//*1. Two Sum//(Easy):
Example 1:

Input: nums = [2,7,11,15], target = 9
Output: [0,1]
Explanation: Because nums[0] + nums[1] == 9, we return [0, 1].
Example 2:

Input: nums = [3,2,4], target = 6
Output: [1,2]
Example 3:

Input: nums = [3,3], target = 6
Output: [0,1]**//

class Solution {
    public int[] twoSum(int[] nums, int target) {
        int n = nums.length;

        int[] ans = new int[2];
         int k=0;
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                if(nums[i]+nums[j] == target){
                    ans[k] = i;
                    ans[k+1]=j;
                }
            }
        }
        
        return ans;
    }
}



//*75. Sort Colors*//(Medium)

//**Example 1:


Input: nums = [2,0,2,1,1,0]
Output: [0,0,1,1,2,2]
Example 2:

Input: nums = [2,0,1]
Output: [0,1,2]**/

class Solution {
    public void sortColors(int[] nums) {
        int n=nums.length;
        int temp=0;
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                if(nums[j]<nums[i])
                {
                     temp=nums[i];
                     nums[i]=nums[j];
                     nums[j]=temp;
                    System.out.println(nums[i]);
                }
            }
        }
        
    }
}
