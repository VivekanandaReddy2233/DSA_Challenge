A. Odd One Out ///  https://codeforces.com/problemset/problem/1915/A
import java.util.Scanner;
public class OddOneOut {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in); 
        int t=sc.nextInt();

        for(int i=0;i<t;i++){
            int a=sc.nextInt();
            int b=sc.nextInt();
            int c=sc.nextInt();

            if(a==b){
                System.out.println(c);
            }
            if(a==c){
              System.out.println(b);
           }
           if(b==c){
            System.out.println(a);
           }
           
        }
    }
}
A. To My Critics ///  https://codeforces.com/problemset/problem/1850/A

import java.util.Scanner;
public class ToMyCritics {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);

        int t=sc.nextInt();

        for(int i=0;i<t;i++){
            int a=sc.nextInt();
            int b=sc.nextInt();
            int c=sc.nextInt();

            if(a+b>=10 || b+c>=10 || a+c>=10){
                System.out.println("YES");
            }
            else{
                System.out.println("NO");
            }
        }
    }
}
BlackSquare // https://codeforces.com/problemset/problem/431/A

import java.util.Scanner;
 
public class BlackSquare {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
 
        
        int[] calories = new int[4];
        for (int i = 0; i < 4; i++) {
            calories[i] = sc.nextInt();
        }
 
      
        String steps = sc.next();
 
        int totalCalories = 0;
 
 
        for (int i = 0; i < steps.length(); i++) {
 
            int strip = Character.getNumericValue(steps.charAt(i));
            
           
            totalCalories += calories[strip - 1];
        }
 
        
        System.out.println(totalCalories);
    }
}

27. Remove Element // https://leetcode.com/problems/remove-element/description/?envType=study-plan-v2&envId=top-interview-150 
class Solution {
    public int removeElement(int[] nums, int val) {
        int n= 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] != val) {
                nums[n] = nums[i];
                n++;
            }
        }
        return n;
    }
}
