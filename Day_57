//////A. Word Capitalization///////
import java.util.Scanner;
public class WordCaptalization {
 public static void main(String[] args) {
    
  Scanner sc=new Scanner(System.in);
 
   String str=sc.nextLine();
 
   String WrdCp=Character.toUpperCase(str.charAt(0))+str.substring(1);
   System.out.println(WrdCp);
 }   
}

/////A. Boy or Girl///////
import java.util.Scanner;
 import java.util.HashSet;;
public class BoyGirl {
    public static void main(String[] args) {
 
        Scanner sc=new Scanner(System.in);
        String str=sc.nextLine();
 
        HashSet<Character> chtr=new HashSet<>();
        for(int i=0;i<str.length();i++){
            char c= str.charAt(i);
            chtr.add(c);
        }
        int disctcount=chtr.size();
 
        if(disctcount%2==0){
            System.out.println("CHAT WITH HER!");
        }
        else{
            System.out.println("IGNORE HIM!");
        }
 
    }
}
.//////////////////A. Bear and Big Brother/////////////////
import java.util.Scanner;
public class BearandBigBrother {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        
        int count=0; 
 
        int Lamak=sc.nextInt();
        int Bob= sc.nextInt();
 
        while(Lamak<=Bob){
           
          Lamak*=3;
          Bob*=2;
          count++;
        }
        System.out.println(count);
    }
}
/////////////////////////////A. Stones on the Table/////
import java.util.Scanner;
 
public class StonesTabel {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
 
       
        int n = sc.nextInt();
        
        sc.nextLine(); 
        
        String str = sc.nextLine();
        
        int count = 0;
 
       
        for (int i = 0; i < str.length() - 1; i++) {
            if (str.charAt(i) == str.charAt(i + 1)) {
                count++;
            }
        }
        
        System.out.println(count);
        sc.close(); 
    }
}
///////////////////A. Elephant///////////
import java.util.Scanner;
public class Elephant {
    public static void main(String[] args) {
         
        Scanner sc=new Scanner(System.in);
 
        int n= sc.nextInt();
 
        int ans=(n+4)/5;
 
        System.out.println(ans);
    }
}
///////////////////////////////A. Soldier and Bananas////////////////
import java.util.Scanner;
public class SoldierandBanana {
 
    public static void main(String[] args) {
       Scanner sc= new Scanner(System.in);
 
       int k=sc.nextInt();
       int n=sc.nextInt();
       int w=sc.nextInt();
 
        int totalcount= k*(w*(w+1))/2;
        int amtbrw=totalcount-n;
 
        if(amtbrw<=0){
            System.out.println(0);
        }
        else{
            System.out.println(amtbrw);
        }
    }
}
/////////////////////1773. Count Items Matching a Rule///////////////////
class Solution {
    public int countMatches(List<List<String>> items, String ruleKey, String ruleValue) {
        int count = 0;

        for (int i = 0; i < items.size(); i++) {
            List<String> currentList = items.get(i);

            if (ruleKey.equals("type") && ruleValue.equals(currentList.get(0))) {
                count++;
            } else if (ruleKey.equals("color") && ruleValue.equals(currentList.get(1))) {
                count++;
            } else if (ruleKey.equals("name") && ruleValue.equals(currentList.get(2))) {
                count++;
            }
        }

        return count;
    }
}
///////////////////////////////1732. Find the Highest Altitude///////////////////////
class Solution {
    public int largestAltitude(int[] gain) {

       int alt=0;
       int max=0;

       for(int i=0; i<gain.length;i++){
           alt+=gain[i];
        if(alt>max){
            max=alt;
          }
         }
       
      return max;
    }
}

