C. Can I Square?// https://codeforces.com/problemset/problem/1915/C
import java.util.Scanner;

public class CanISquare {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

       
        int t = sc.nextInt();
        
       
        for (int i = 0; i < t; i++) {
            int n = sc.nextInt();  
            long count = 0;  
            
           
            for (int j = 0; j < n; j++) {
                count += sc.nextLong();  
            }
            
            long root = (long) Math.sqrt(count);
            if (root * root == count) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
            }
        }
        
    }
}
A. Sasha and Array Coloring// https://codeforces.com/problemset/problem/1843/A
import java.util.Arrays;
import java.util.Scanner;

public class SashaandArrayColoring {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        
        while (t-- > 0) {
           
            int n = sc.nextInt();
            int[] a = new int[n];
            
           
            for (int i = 0; i < n; i++) {
                a[i] = sc.nextInt();
            }
            
            Arrays.sort(a);
            int totalCost = 0;
            
            for (int i = 0; i < n / 2; i++) {
               
                int largest = a[n - 1 - i];
                int smallest = a[i];
                
                totalCost += largest - smallest;
            }
            System.out.println(totalCost);
        }
    }
}
43. Multiply Strings// https://leetcode.com/problems/multiply-strings/description/
class Solution {
    public String multiply(String num1, String num2) {
        if(num1.equals("0") || num2.equals("0"))
            return "0";
        int l1 = num1.length();
        int l2 = num2.length();
        int[] res = new int[l1+l2];

        int i = l2 - 1; 
        int pf = 0; 

        while(i >= 0) {
            int ival = num2.charAt(i)-'0';
            i--;

            int j = l1-1;
            int k = res.length-1-pf;
            int carry = 0;

            while(j >=0 || carry != 0) {
                int jval = j >= 0 ? num1.charAt(j)-'0' : 0;
                j--;

                int prod = ival * jval + carry + res[k];

                res[k] = prod%10;
                carry = prod/10;
                k--;
            }
            pf++;
        }
        boolean flag = false;
        String str = "";
        for(int val : res) {
            if(val==0 && flag==false) {
                continue;
            }
            else {
                flag = true;
                str += val;
            }
        }
        return str;
    }
}

