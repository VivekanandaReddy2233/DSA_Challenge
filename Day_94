A. Is your horseshoe on the other hoof?/// https://codeforces.com/problemset/problem/228/A
import java.util.Scanner;
 
public class Horseshoe {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int s1=sc.nextInt();
        int s2=sc.nextInt();
        int s3=sc.nextInt();
        int s4=sc.nextInt();
        int color=4;
        if(s1==s2 || s1==s3 || s1==s4){
           color--;
        }
        if(s2==s3 || s2==s4){
            color--;
        }
        if(s3==s4){
            color--;
        }
        int horseshoe=4-color;
        System.out.println(horseshoe);
    }
}
B. osu!mania// https://codeforces.com/problemset/problem/2009/B

import java.util.Scanner;
 
public class OsuMania {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();  // Number of test cases
   
        for (int test = 0; test < t; test++) {
            int n = sc.nextInt(); 
            int[] result = new int[n];  
            
          
            for (int i = 0; i < n; i++) {
                String row = sc.next();  
                for (int j = 0; j < 4; j++) {
                    if (row.charAt(j) == '#') {
                        result[n - i - 1] = j + 1; 
                        break;
                    }
                }
            }
            
            for (int i = 0; i < n; i++) {
                System.out.print(result[i] + " ");
            }
            System.out.println();
        }
        
    }
}
70. Climbing Stairs// https://leetcode.com/problems/climbing-stairs/description/
class Solution {
    public int climbStairs(int n) {

        int[] arr = new int[n + 1];
        arr[0] = 1;
        arr[1] = 1;

        for (int i = 2; i <= n; i++) {  
            arr[i] = arr[i - 1] + arr[i - 2];
        }
        return arr[n];      
    }
}
