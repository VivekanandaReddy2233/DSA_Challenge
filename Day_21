********************************************189. Rotate Array*********************************************


*********************************************Solution*****************************************
class Solution {
    public void rotate(int[] nums, int k) {
        int n = nums.length;
        k %= n;  
        
        reverseNum(nums, 0, n - 1);
        

        reverseNum(nums, 0, k - 1);
        
       
        reverseNum(nums, k, n - 1);
    }

    public void reverseNum(int[] nums, int start, int end) {
        while (start < end) {
            int temp = nums[start];
            nums[start] = nums[end];
            nums[end] = temp;
            start++;
            end--;
        }
    }
}

**********************************************************13. Roman to Integer************************************************************
*********************************************************8solution******************************************************************************


class Solution {
    public int romanToInt(String s) {
        Map<Character, Integer> map = new HashMap<>();
        map.put('I', 1);
        map.put('V', 5);
        map.put('X', 10);
        map.put('L', 50);
        map.put('C', 100);
        map.put('D', 500);
        map.put('M', 1000);
        
        char[] chars = s.toCharArray();
        int result = 0;
        
        for (int i = 0; i < chars.length; i++) {
            if (i > 0 && map.get(chars[i]) > map.get(chars[i - 1])) {
                result += map.get(chars[i]) - 2 * map.get(chars[i - 1]);
            } else {
                result += map.get(chars[i]);
            }
        }
        
        return result;
    }
}


