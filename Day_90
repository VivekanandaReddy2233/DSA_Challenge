A. Array with Odd Sum/// https://codeforces.com/problemset/problem/1296/A
import java.util.Scanner;

public class ArraywithOddSum {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);

        int t=sc.nextInt();

        for(int i=0;i<t;i++){
            int n=sc.nextInt();
            int sum=0;
            int oddcount=0;
            int evencount=0;

            for (int j = 0; j < n; j++) {
                int num = sc.nextInt();
                sum += num;
                
                if (num % 2 == 0) {
                    evencount++;
                } else {
                    oddcount++;
                }
            }
                if (sum % 2 == 1 || (oddcount > 0 && evencount > 0)) {
                    System.out.println("YES");
                } else {
                    System.out.println("NO");
                }
            }
        }
 }
A. Favorite Sequence //https://codeforces.com/problemset/problem/1462/A
import java.util.Scanner;

public class FavoriteSequence {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();

        for(int i=0;i<t;i++){
            int n=sc.nextInt();
            int[] arr = new int[n];

            for (int j = 0; j < n; j++) {
                arr[j] = sc.nextInt();
            }
            int left = 0;  
            int right = n - 1;

            while (left <= right) {
              
                System.out.print(arr[left++] + " ");
                if (left <= right) {
                    System.out.print(arr[right--] + " ");
                }
            }
            System.out.println();  
        }
    }
}

1963. Minimum Number of Swaps to Make the String Balanced// https://leetcode.com/problems/minimum-number-of-swaps-to-make-the-string-balanced/description/?envType=daily-question&envId=2024-10-08
class Solution {
    public int minSwaps(String s) {
       int count =0;
       for(int i=0;i<s.length();i++){
         char ch=s.charAt(i);

          if(ch=='['){
            count++;
          }
          else if(count >0){
             count--;
          }
       } 
       return (count+1)/2;
    }
}


