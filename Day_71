
///A. I_love_%username%....  https://codeforces.com/problemset/problem/155/A

import java.util.Scanner;
public class username {
   public static void main(String[] args) {
    Scanner sc=new Scanner(System.in);
    int n=sc.nextInt();


    int fstScr = sc.nextInt();
    int maxScore = fstScr;
    int minScore =fstScr;

    int count=0;

    for(int i =1;i<n;i++){
        int score=sc.nextInt();

        if(score > maxScore){
           maxScore=score;
           count++;
        }
        else if( score < minScore){
          minScore=score;
          count++;
        }
    }
   System.out.println(count);
   } 
}
///A. Sum///  https://codeforces.com/problemset/problem/1742/A

import java.util.Scanner;

public class ASum {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);

        int t=sc.nextInt();

        for( int i=0;i<t;i++){
            int a=sc.nextInt();
            int b=sc.nextInt();
            int c=sc.nextInt();

            if( a+b== c  || a+c==b  ||b+c==a){
                System.out.println("YES");
            }
            else{
                System.out.println("NO");
            }
        }
    }
}
A. Buy a Shovel ////  https://codeforces.com/problemset/problem/732/A

import java.util.Scanner;

public class BuyaShovel {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);

        int k=sc.nextInt();
        int r=sc.nextInt();


        for(int i=1;i<=10;i++){
            
            if((i*k)%10==0||(i*k)%10==r){
                System.out.println(i);
                break;
            }
        }
    }
}

153. Find Minimum in Rotated Sorted Array  ////https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/description/  
class Solution {
    public int findMin(int[] nums) {

     int start=0;
     int end=nums.length-1 ;
     int ans = Integer.MAX_VALUE;
      while(start<=end){
        int mid= start+(end-start)/2;
   
       if( nums[start] <= nums[mid] ){
         ans=Math.min(ans, nums[start]);
         start=mid+1;
       }
       else {
        
        ans=Math.min(ans, nums[mid]);
        end = mid-1;
       }

      }
      return ans;
    }
}
