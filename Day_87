A. Square //https://codeforces.com/problemset/problem/1921/A

import java.util.Scanner;

public class SquareArea {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt(); 
        
        while (t-- > 0) {
            int minX = Integer.MAX_VALUE, maxX = Integer.MIN_VALUE;
            int minY = Integer.MAX_VALUE, maxY = Integer.MIN_VALUE;

            
            for (int i = 0; i < 4; i++) {
                int x = sc.nextInt();
                int y = sc.nextInt();
                
                minX = Math.min(minX, x);
                maxX = Math.max(maxX, x);
                minY = Math.min(minY, y);
                maxY = Math.max(maxY, y);
            }
            int side = Math.max(maxX - minX, maxY - minY);
            System.out.println(side * side); 
        }
    }
}
A. Yogurt Sale/// https://codeforces.com/problemset/problem/1955/A
import java.util.Scanner;

public class AYogurtSale {
    public static void main(String[] args) {
        Scanner sc= new Scanner(System.in);

        int t=sc.nextInt();
        for(int i=0;i<t;i++){
            int n=sc.nextInt();
            int a=sc.nextInt();
            int b=sc.nextInt();
            int totlcst=0;

            totlcst=(n/2)*Math.min(2*a, b);
            if(n%2==1){
                totlcst += a;
            }
            System.out.println(totlcst);
        }
    }
}
A. Rudolf and the Ticket// https://codeforces.com/problemset/problem/1941/A

import java.util.Scanner;

public class RudolfandtheTicket {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int t = sc.nextInt();

        for (int i = 0; i < t; i++) {
            int n = sc.nextInt();
            int m = sc.nextInt();
            int k = sc.nextInt(); 
            int count = 0;

            int arr1[] = new int[n]; 
            int arr2[] = new int[m]; 

            
            for (int j = 0; j < n; j++) {
                arr1[j] = sc.nextInt();
            }
            for (int l = 0; l < m; l++) {
                arr2[l] = sc.nextInt(); 
            }
            for (int j = 0; j < n; j++) {
                for (int b = 0; b < m; b++) { 
                    if (arr1[j] + arr2[b] <= k) {
                        count++;
                    }
                }
            }
            System.out.println(count);
        }
    }
}
12. Integer to Roman//  https://leetcode.com/problems/integer-to-roman/?envType=study-plan-v2&envId=top-interview-150
import java.util.HashMap;

class Solution {
    public String intToRoman(int num) {
        HashMap<Integer, String> map = new HashMap<>();
        map.put(1000, "M");
        map.put(900, "CM");
        map.put(500, "D");
        map.put(400, "CD");
        map.put(100, "C");
        map.put(90, "XC");
        map.put(50, "L");
        map.put(40, "XL");
        map.put(10, "X");
        map.put(9, "IX");
        map.put(5, "V");
        map.put(4, "IV");
        map.put(1, "I");

        String result = ""; 

        Integer[] keys = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};

        for (int i = 0; i < keys.length; i++) {
            int key = keys[i];
            while (num >= key) {
                result += map.get(key); 
                num -= key; 
            }
        }

        return result; 
    }
}


