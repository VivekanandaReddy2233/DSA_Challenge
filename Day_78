B. Even Array ////  https://codeforces.com/problemset/problem/1367/B

import java.util.Scanner;
public class EvenArray {
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);

        int t=sc.nextInt();

        while (t-- > 0) {
            int n=sc.nextInt();
            int arr[]=new int[n];

           for(int i=0;i<n;i++){
            arr[i]=sc.nextInt();
           }
           int oddmis=0;
           int evenmis=0;
           for (int i = 0; i < n; i++) {
            if (i % 2 == 0 && arr[i] % 2 != 0) {
                evenmis++;  
            }
            if (i % 2 == 1 && arr[i] % 2 != 1) {
                oddmis++;  
            }
        }
        if (oddmis == evenmis) {
            System.out.println(oddmis); 
        } else {
            System.out.println(-1);  
        }
    
        }   
    }
}
A. Panoramix's Prediction //  https://codeforces.com/problemset/problem/80/A
import java.util.Scanner;

public class PanoramixPrediction {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int n = sc.nextInt();
        int m = sc.nextInt();
        
     
        if (isNextPrime(n, m)) {
            System.out.println("YES");
        } else {
            System.out.println("NO");
        }
        sc.close();
    }

   
    public static boolean isNextPrime(int n, int m) {
        for (int i = n + 1; i <= m; i++) {
            if (isPrime(i)) {
                return i == m;
            }
        }
        return false;
    }

   
    public static boolean isPrime(int num) {
        if (num < 2) return false;
        for (int i = 2; i * i <= num; i++) {
            if (num % i == 0) return false;
        }
        return true;
    }
}
A. Boring Apartments //https://codeforces.com/problemset/problem/1433/A
import java.util.Scanner;
 
public class BoringApartments {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        int t = scanner.nextInt(); 
 
        for (int i = 0; i < t; i++) {
            int x = scanner.nextInt();  
            int digit = x % 10;
            int n = String.valueOf(x).length(); 
 
            
            int result = (digit - 1) * 10 + (n * (n + 1)) / 2;
 
            
            System.out.println(result);
        }
 
        scanner.close();
    }
}

A. Plus One on the Subset /// https://codeforces.com/problemset/problem/1624/A

import java.util.Scanner;
public class PlusOneOnTheSubset {
    public void meth(){
        Scanner sc=new Scanner(System.in);
        int t=sc.nextInt();

        while (t-- > 0) {
            
         int n=sc.nextInt();
         int arr[]=new int[n];
         
         for (int i = 0; i < n; i++) {
            arr[i] = sc.nextInt();
        }
         
         int max = arr[0], min = arr[0];
         for (int i = 1; i < n; i++) {
             if (arr[i] > max) {
                 max = arr[i];
             }
             if (arr[i] < min) {
                 min = arr[i];
             }
     
           }
           System.out.println(max - min);
    }      
    }
   
  

    public static void main(String[] args) {
        
        new PlusOneOnTheSubset().meth();
    }
}

80. Remove Duplicates from Sorted Array II ///https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii/description/?envType=study-plan-v2&envId=top-interview-150
class Solution {
    public int removeDuplicates(int[] nums) {
        int j = 1;
        for (int i = 1; i < nums.length; i++) {
            if (j == 1 || nums[i] != nums[j - 2]) {
                nums[j++] = nums[i];
            }
        }
        return j;
    }
}

