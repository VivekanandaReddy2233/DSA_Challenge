******************************************************************1922. Count Good Numbers***************************************************************************

***************************************************Solution**********************************************************
class Solution {
    public int countGoodNumbers(long n) {
   
    int MOD=1_000_000_007;
    long result =n%2==0?1:5;
    long x=20;
     for(long i=n/2;i>0;i/=2)
     {
        if(i%2!=0) result =result*x %MOD;
        x=x*x%MOD;

     }
       
        return (int) result;
    }
}
**************************************************************************22. Generate Parentheses*********************************************************************************

*********************************************************************Solution*******************************
    public List<String> generateParenthesis(int n) {
        List<String>ans=new ArrayList<>();
        solve("", 0, 0, n, ans);
        return ans;
    }
    public void solve(String curr, int open, int close, int total,List<String> ans ){
        if(curr.length()==2*total)
        {
            ans.add(curr);
            return ;
        }
        if(open<total)
        {
            solve(curr+"(", open+1, close, total, ans);
        }
        if(close<open)
        {
            solve(curr+")",open, close+1, total, ans);

        }
    }
}
